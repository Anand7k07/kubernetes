Prerequisites=

To install Kubernetes on your Ubuntu machine, make sure it meets the following requirements:

> 2 CPUs
> At least 2GB of RAM
> At least 2 GB of Disk Space
> A reliable internet connection

Start 3 ubuntu machines (one master-node, one worker-node1 and one worker-node2) and stable connectivity

Step 1: Disable swap and modify a configuration file to keep the swap remains off even after a system reboot.

# sudo swapoff -a
# sudo sed -i '/ swap / s/^/#/' /etc/fstab

Step 2: Set up hostnames

# sudo hostnamectl set-hostname "master-node"
# exec bash (to refresh your current bash session so that it can recognize and use the new hostname immediately)
# sudo hostnamectl set-hostname "worker-node1"
# exec bash
# sudo hostnamectl set-hostname "worker-node2"
# exec bash

Step 4: Set up the IPV4 bridge on all nodes

# cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
  overlay
  br_netfilter
  EOF

# sudo modprobe overlay
# sudo modprobe br_netfilter

>> sysctl params required by setup, params persist across reboots
# cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
  net.bridge.bridge-nf-call-iptables  = 1
  net.bridge.bridge-nf-call-ip6tables = 1   net.ipv4.ip_forward                 = 1
  EOF

>> Apply sysctl params without reboot
# sudo sysctl --system

Step 5: Install kubelet, kubeadm, and kubectl on each node

# sudo apt-get update
# sudo apt-get install -y apt-transport-https ca-certificates curl
# sudo mkdir /etc/apt/keyrings
# curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg
# echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
# sudo apt-get update
# sudo apt install -y kubelet=1.26.5-00 kubeadm=1.26.5-00 kubectl=1.26.5-00

Step 6: Install Docker

# sudo apt install docker.io
# sudo mkdir /etc/containerd
# sudo sh -c "containerd config default > /etc/containerd/config.toml"
# sudo sed -i 's/ SystemdCgroup = false/ SystemdCgroup = true/' /etc/containerd/config.toml
# sudo systemctl restart containerd.service
# sudo systemctl restart kubelet.service
# sudo systemctl enable kubelet.service

Step 7: Initialize the Kubernetes cluster only on the master-node

# sudo kubeadm config images pull
# sudo kubeadm init --pod-network-cidr=10.10.0.0/16
# mkdir -p $HOME/.kube
# sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
# sudo chown $(id -u):$(id -g) $HOME/.kube/config

Step 8: Add worker nodes to the cluster

# sudo kubeadm join &lt;MASTER_NODE_IP>:&lt;API_SERVER_PORT> --token &lt;TOKEN> --discovery-token-ca-cert-hash &lt;CERTIFICATE_HASH>

Step 9: Verify the cluster and test

# sudo kubectl get nodes
# sudo kubectl get pods -A